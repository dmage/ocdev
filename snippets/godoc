#!/bin/sh -eu

# OCDEV HELP: Run godoc for the package in the current directory

if ! type bindfs >/dev/null 2>/dev/null; then
    printf "%s\n" >&2 \
        "This command requires bindfs to be installed." \
        "" \
        "Fedora: dnf install bindfs" \
        "Gentoo: emerge -av bindfs" \
        "macOS: brew install bindfs" \
        "Ubuntu: apt-get install bindfs" \
        "" \
        "Please visit http://bindfs.org/ for other options." \
        ""
    fatal "findfs is not found"
fi

open_url() {
    echo "$1"
    if type xdg-open >/dev/null 2>&1; then
        xdg-open "$1"
    else
        open "$1"
    fi || true
}

fuse_unmount() {
    if type fusermount >/dev/null 2>&1; then
        fusermount -q -u "$@"
    else
        umount "$@"
    fi
}

PKG=$(go list -e -f "{{.ImportPath}}" .)

_TMP=$(mktemp -d "${TMPDIR:-/tmp}"/ocdev-godoc.XXXXXXXX)
cleanup() {
    trap - EXIT
    fuse_unmount "$_TMP/src/$PKG" || true
    rm -rf "$_TMP"
    exit "$1"
}
trap 'cleanup $?' EXIT
trap 'cleanup 1' HUP PIPE INT QUIT TERM

mkdir -p "$_TMP/src/$PKG"
bindfs --no-allow-other "$PWD" "$_TMP/src/$PKG"

{
    for i in 1 2 3 4 5 6 7 8 9 10; do
        curl -fs --max-time 1 "http://localhost:6060/" >/dev/null && break
        sleep 0.5
    done
    open_url "http://localhost:6060/pkg/$pkg/"
}&

RC=0
GOPATH="$_TMP" godoc -http=:6060 "$@" || RC=$?
kill %1
wait
exit $RC
