#!/bin/sh
exec grep --line-buffered -E -v \
  -e '^I.* logs\.go:[0-9]+] http: TLS handshake error from .*: EOF' \
  -e 'level=error msg="Error statting blob sha256:.* in remote repository \\".*\\": Head .*: error parsing HTTP 429 response body:' \
  -e 'level=error msg="OpenShift access denied: no RBAC policy matched' \
  -e 'level=error msg="error closing blobwriter: blobwriter close after commit"' \
  -e 'level=error msg="error resolving upload: blob upload unknown" .* http\.request\.method=DELETE' \
  -e 'level=error msg="error resolving upload: parsing time \\"\\"' \
  -e 'level=error msg="imageStream\.HasBlob: failed to get image stream: ImageStreamGetter:NotFound:' \
  -e 'level=error msg="invalid token: Unauthorized"' \
  -e 'level=error msg="manifestService\.Get: unable to get image sha256:.* in imagestream .*: ImageStream:ImageNotFound: ResolveImageID: unable to resolve ImageID sha256:.* in image stream .*: imagestreamimage\.image\.openshift\.io \\"sha256:.*\\" not found"' \
  -e 'level=error msg="manifestService\.Get: unable to get image sha256:.* in imagestream .*: ImageStream:NotFound: ResolveImageID: failed to get image stream .*: ImageStreamGetter:NotFound: .*: imagestreams\.image\.openshift\.io \\".*\\" not found"' \
  -e 'level=error msg="remoteGet: unable to get image sha256:.* in imagestream .*: ImageStream:ImageNotFound: ResolveImageID: unable to resolve ImageID sha256:.* in image stream .*: imagestreamimage\.image\.openshift\.io \\"sha256:.*\\" not found"' \
  -e 'level=error msg="remoteGet: unable to get image sha256:.* in imagestream .*: ImageStream:NotFound: ResolveImageID: failed to get image stream .*: ImageStreamGetter:NotFound: .*: imagestreams\.image\.openshift\.io \\".*\\" not found"' \
  -e 'level=error msg="response completed with error" err\.code="blob unknown" err\.message="blob unknown to registry" .* http\.request\.method=DELETE' \
  -e 'level=error msg="response completed with error" err\.code="blob upload unknown" err\.detail="blob upload unknown" err\.message="blob upload unknown to registry" .* http\.request\.method=DELETE' \
  -e 'level=error msg="response completed with error" err\.code="manifest invalid" err\.detail="missing signature key" err\.message="manifest invalid"' \
  -e 'level=error msg="response completed with error" err\.code="manifest unknown" err\.detail="unknown manifest' \
  -e 'level=error msg="response completed with error" err\.code="manifest unknown" err\.detail="unknown tag' \
  -e 'level=error msg="response completed with error" err\.code="manifest unknown" err\.message="manifest unknown"' \
  -e 'level=error msg="response completed with error" err\.code="name unknown" err\.message="repository name not known to registry"' \
  -e 'level=error msg="response completed with error" err\.code=unknown err\.detail="gcs: googleapi: got HTTP response code 400 with body: Bad Request" err\.message="unknown error" .* http\.request\.method=PATCH .* http\.request\.uri=".*/blobs/uploads/.*\?_state=.*"' \
  -e 'level=error msg="response completed with error" err\.code=unknown err\.detail="gcs: storage: can'"'"'t read object .*/startedat, status code: 400 Bad Request" err\.message="unknown error" .* http\.request\.method=PATCH .* http\.request\.uri=".*/blobs/uploads/.*\?_state=.*"' \
  -e 'level=error msg="response completed with error" err\.code=unknown err\.detail="http: unexpected EOF reading trailer" err\.message="unknown error" .* http\.request\.method=PATCH .* http\.request\.uri=".*/blobs/uploads/.*\?_state=.*"' \
  -e 'level=error msg="response completed with error" err\.code=unknown err\.detail="read tcp .*: read: connection reset by peer" err\.message="unknown error" .* http\.request\.method=PATCH' \
  -e 'level=error msg="response completed with error" err\.code=unknown err\.detail="unexpected EOF" err\.message="unknown error" .* http\.request\.method=PATCH .* http\.request\.uri=".*/blobs/uploads/.*\?_state=.*"' \
  -e 'level=error msg="response completed with error" err\.code=unknown err\.detail="unexpected end of JSON input" err\.message="unknown error" .* http\.request\.method=(GET|HEAD) .* http\.request\.uri=.*/manifests/.*' \
  -e 'level=error msg="response completed with error" err\.code=unknown err\.detail=EOF err\.message="unknown error" .* http\.request\.method=PUT .* http\.request\.uri=".*/blobs/uploads/.*"' \
  -e 'level=error msg="response completed with error" err\.code=unsupported err\.message="The operation is unsupported\." .* http\.request\.method=DELETE' \
  -e 'level=error msg="unable to get manifest from image object: manifest is not present in image object' \
  -e 'level=error msg="unknown error reading request payload:' \
  -e 'level=info msg="Completed mirroring of \\"sha256:.*\\""' \
  -e 'level=info msg="DEPRECATED: \\"OPENSHIFT_DEFAULT_REGISTRY\\" is deprecated, use the '"'"'REGISTRY_OPENSHIFT_SERVER_ADDR'"'"' instead"' \
  -e 'level=info msg="Deleting blob: ' \
  -e 'level=info msg="Found digest location by search \\"sha256:.*\\" in \\".*\\""' \
  -e 'level=info msg="Found digest location from cache \\"sha256:.*\\" in \\".*\\""' \
  -e 'level=info msg="Purge uploads finished\.' \
  -e 'level=info msg="PurgeUploads starting:' \
  -e 'level=info msg="Serving \\"sha256:.*\\" while mirroring in background"' \
  -e 'level=info msg="Start background mirroring of \\"sha256:.*\\""' \
  -e 'level=info msg="Starting profiling endpoint at' \
  -e 'level=info msg="Starting upload purge in' \
  -e 'level=info msg="Trying to stat \\"sha256:.*\\" from \\".*\\""' \
  -e 'level=info msg="Upload files in .* have older date .* than purge date .* Removing upload directory\."' \
  -e 'level=info msg="Using \\"docker-registry\.default\.svc:5000\\" as Docker Registry URL"' \
  -e 'level=info msg="blobHandler: ignoring driver\.PathNotFoundError error: gcs: Path not found: .*" .* http\.request\.method=DELETE' \
  -e 'level=info msg="listening on :5000, tls"' \
  -e 'level=info msg="quota enforcement disabled"' \
  -e 'level=info msg="redis not configured"' \
  -e 'level=info msg="response completed with error" err\.code="blob unknown" err\.detail="sha256:.*" err\.message="blob unknown to registry"' \
  -e 'level=info msg="response completed with error" err\.code="manifest unknown" err\.detail="unknown tag' \
  -e 'level=info msg="response completed with error" err\.code="name unknown" err\.message="repository name not known to registry"' \
  -e 'level=info msg="response completed"' \
  -e 'level=info msg="using openshift blob descriptor cache"' \
  -e 'level=info msg=response .* http\.request\.contenttype=application/vnd\.oci\.image\.manifest\.v1\+json .* http\.response\.status=400' \
  -e 'level=info msg=response .* http\.request\.method=DELETE .* http\.response\.status=204' \
  -e 'level=info msg=response .* http\.response\.status=(200|201|202|307|401|404|405|500)' \
  -e 'level=warning msg="API server was unable to fetch layers for the requested image stream: ImageStreamGetter:NotFound:' \
  -e 'level=warning msg="Ignoring unrecognized environment variable REGISTRY_CONSOLE_' \
  -e 'level=warning msg="error authorizing context: access denied"' \
  -e 'level=warning msg="error authorizing context: authorization header required"' \
  -e 'level=warning msg="the ResponseWriter does not implement CloseNotifier' \
