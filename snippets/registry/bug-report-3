#!/bin/sh
set -eu
# Postpone execution until the whole script is available.
# It is useful if someone decides to use `curl ... | sh`.
main(){

cleanup() {
    [ -z "${WORKDIR-}" ] || rm -rf "$WORKDIR"
    exit "$1"
}
trap 'cleanup $?' EXIT
trap 'cleanup 1' HUP PIPE INT QUIT TERM

NOW=$(date -u +'%Y%m%d-%H%M%S')
WORKDIR=$(mktemp -d -t image-registry-bug-report.XXXXXX)
OUTDIR="$WORKDIR/image-registry-bug-report-$NOW"
mkdir "$OUTDIR"

for KIND in deploymentconfigs pods; do
    printf >&2 "getting %s...\n" "$KIND"
    kubectl -n default get "$KIND" -o json >"$OUTDIR/$KIND.json"
done

kubectl -n default get pods -l docker-registry=default -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}' | while read -r POD; do
    printf >&2 "getting logs for pod/%s...\n" "$POD"
    kubectl -n default logs "pod/$POD" >"$OUTDIR/pod-$POD.log"
done

tar -czf "image-registry-bug-report-$NOW.tar.gz" -C "$WORKDIR" "$(basename "$OUTDIR")"
ls -alh "image-registry-bug-report-$NOW.tar.gz"

};main
