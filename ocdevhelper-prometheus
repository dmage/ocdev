#!/bin/bash -efu

usage() {
    echo "usage: $OCDEV_PROGNAME <command>"
    echo
    echo "Available commands:"
    echo "  generate-config"
    echo "  deploy"
}

ocdevprometheus-generate-config() {
    cat <<END
global:
  scrape_interval:     5s
  evaluation_interval: 5s

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']

  - job_name: 'docker-registry'
    metrics_path: /extensions/v2/metrics
    bearer_token: mysecret
    static_configs:
      - targets: ['172.30.1.1:5000']
}
END
}

ocdevprometheus-deploy() {
    [ $# -ge 1 ] || {
        echo "usage: $OCDEV_PROGNAME <prometheus.yml>" >&2
        exit 1
    }

    oc new-app google/cadvisor
    oc new-app prom/prometheus

    oc expose service cadvisor --hostname='cadvisor.127.0.0.1.nip.io'
    oc expose service prometheus --hostname='prometheus.127.0.0.1.nip.io'

    oc create configmap prom-config --from-file="$1"

    oc patch dc/prometheus -p '{"spec": {"template": {"spec": {
      "volumes": [{
        "name": "prom-config-volume",
        "configMap": {
          "name": "prom-config",
          "defaultMode": 420
        }
      }],
      "containers":[{
        "name": "prometheus",
        "volumeMounts": [{
          "name": "prom-config-volume",
          "mountPath": "/etc/prometheus/"
        }]
      }]
    } } } }'

    oc rollout status dc/prometheus
}

ocdevutil-main "ocdevprometheushelper-" "ocdevprometheus-" "$@"
